{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/container.js","webpack:///./src/templates/recette.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/container.module.scss"],"names":["Header","className","to","Container","children","containerStyles","container","Recette","data","recette","markdownRemark","style","backgroundImage","file","childImageSharp","fluid","src","backgrounRepeat","backgroundPosition","backgroundSize","frontmatter","title","dangerouslySetInnerHTML","__html","html","query","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"uJASeA,EANA,kBACb,yBAAKC,UAAU,oBACb,kBAAC,IAAD,CAAMC,GAAG,KAAT,kBCSWC,IAVG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEnB,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKH,UAAWI,IAAgBC,WAAYF,M,oCCTlD,0HAIaG,EAAU,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClBC,EAAUD,EAAKE,eAEfC,EAAQ,CACZC,gBAAiB,OAFLJ,EAAKK,KAAKC,gBAAgBC,MAENC,IAAM,IACtCC,gBAAiB,YACjBC,mBAAoB,QACpBC,eAAgB,SAElB,OACE,kBAAC,IAAD,KACE,yBAAKlB,UAAU,WACb,yBAAKU,MAAOA,EAAOV,UAAU,2BAC7B,yBAAKA,UAAU,wBACb,wBAAIA,UAAU,OAAOQ,EAAQW,YAAYC,OACzC,yBAAKC,wBAAyB,CAAEC,OAAQd,EAAQe,YAO7CC,EAAK,aAkBHlB,a,kCC5Cf,sGAcyBmB,QAAOC,QAELC,IAAMC,cAAc,K,qBChB/C,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,wFCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGET,IAAMU,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV,O,qBCNXT,EAAOC,QAAU,CAAC,UAAY","file":"component---src-templates-recette-js-e43f3ea59240d4578619.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = () => (\n  <div className='fixed header mt4'>\n    <Link to='/'>Milet Fignon</Link>\n  </div>\n)\n\nexport default Header\n","import React from \"react\"\nimport containerStyles from \"./container.module.scss\"\nimport Header from \"./header\"\n\nconst Container = ({ children }) => {\n\n  return (\n    <div>\n      <Header />\n      <div className={containerStyles.container}>{children}</div>\n    </div>\n  )\n}\n\nexport default Container\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Container from \"../components/container\"\n\nexport const Recette = ({ data }) => {\n  const recette = data.markdownRemark\n  const image = data.file.childImageSharp.fluid\n  const style = {\n    backgroundImage: 'url(' + image.src + ')',\n    backgrounRepeat: 'no repeat',\n    backgroundPosition: 'right',\n    backgroundSize: 'cover',\n  }\n  return (\n    <Container>\n      <div className='md-flex'>\n        <div style={style} className='flex-1 md-mw50 sm-h400'></div>\n        <div className='md-col-4 px3 mt2 mb4'>\n          <h1 className='mb4'>{recette.frontmatter.title}</h1>\n          <div dangerouslySetInnerHTML={{ __html: recette.html }} />\n        </div>\n      </div>\n    </Container>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!, $image: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title,\n        image\n      }\n    }\n    file(relativePath: { eq: $image }) {\n      childImageSharp {\n        fluid(maxWidth: 1900) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\nexport default Recette\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container-module--container--3OTf8\"};"],"sourceRoot":""}